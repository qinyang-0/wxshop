<?php/* * 财务管理 */global $_W, $_GPC;$do = $_GPC['do'];$op = $_GPC['op'];$in = $_GPC['in'];$id = $_GPC['id'];//主键idempty($op) ? $op = 'get_cash' : $op ;$weid = $this->weid;  //控制模块switch($op){    //提现	case 'get_cash':        //提现管理		$index=isset($_GPC['page'])?$_GPC['page']:1;        $pageIndex = $index;        $pageSize = 10;        $title = trim($_GPC['title']);        $where ="";        if(isset($title) && !empty($title) ) {        	$members = pdo_fetchall("select m_openid from ".tablename($this->member)." where m_nickname like '%".$title."%' or m_nickname like '%".base64_encode($title)."%' or m_name like '%".$title."%'");			if($members){				$where .= " and (";				foreach($members as $k=>$v){					$where .= " openid = '".$v['m_openid']."' or";				}				$where = substr($where,0,strlen($where)-2);				$where .= ")";			}//          $where .= " and  (m_nickname like '%".$title."%' or m_nickname like '%".base64_encode($title)."%' or m_name like '%".$title."%')";        }		$contion = 'limit '.($pageIndex-1) * $pageSize .','. $pageSize;		$total= pdo_fetchcolumn('select count(*) from ' . tablename($this->get_cash)." where  weid =".$weid.$where);		$page = pagination($total,$pageIndex,$pageSize);		//获取分页信息 		$sql = 'select gc.ggc_id,m.m_photo,m.m_nickname,gc.ggc_money,gc.ggc_type,gc.ggc_add_time,gc.ggc_pay_type,gc.ggc_pay_account,gc.ggc_pay_name,gc.ggc_open_account_name,gc.ggc_content,gc.ggc_update_time from (select gc.ggc_id,gc.ggc_money,gc.ggc_type,gc.ggc_add_time,gc.ggc_pay_type,gc.ggc_pay_account,gc.ggc_pay_name,gc.ggc_open_account_name,gc.ggc_content,gc.weid,gc.openid,gc.ggc_update_time from '.tablename('gpb_get_cash').' gc where gc.weid = '.$weid.$where.' order by ggc_id desc '.$contion.')'." as gc join ".tablename($this->member)." as m on m.m_openid =gc.openid order by gc.ggc_id desc ";		//		SELECT gc.ggc_id,m.m_photo,m.m_nickname,gc.ggc_money,gc.ggc_type,gc.ggc_add_time,gc.ggc_pay_type,gc.ggc_pay_account,gc.ggc_pay_name,gc.ggc_open_account_name,gc.ggc_content,gc.ggc_update_time FROM //(SELECT gc.ggc_id,gc.ggc_money,gc.ggc_type,gc.ggc_add_time,gc.ggc_pay_type,gc.ggc_pay_account,gc.ggc_pay_name,gc.ggc_open_account_name,gc.ggc_content,gc.weid,gc.openid,gc.ggc_update_time //FROM ims_gpb_get_cash gc JOIN ims_gpb_member m ON m.m_openid = gc.openid //WHERE gc.weid = 6 AND m_nickname LIKE '%5a6a5pWw%' ORDER BY gc.ggc_id DESC LIMIT 0,10 ) AS gc JOIN ims_gpb_member AS m ON m.m_openid =gc.openid ORDER BY gc.ggc_id DESC										$info = pdo_fetchall($sql);		if(is_array($info)){		    foreach ($info as $k=>$v){                if($this->check_base64_out_json( $v['m_nickname'] )){                    $info[$k]['m_nickname'] = base64_decode( $v['m_nickname'] );                }            }        }	break;	//确认提现	case 'sure_get_cash':	    $id = trim($_GPC['id']);	    if(empty($id)){            $this->message_info('非法访问');        }        $info = pdo_get($this->get_cash,array("ggc_id"=>$id,'weid'=>$weid));	    $account = pdo_get($this->member,array('m_openid'=>$info['openid'],'weid'=>$weid));//        $cash_min_price = pdo_get($this->config,array('key'=>'cash_min_price','weid'=>$weid));//最低提现金额//        if($info['ggc_money'] < $cash_min_price['value']){//            $this->message_info("提现金额小于最低提现金额，不能提现");//        }	    if( $account['m_money'] < $info['ggc_money'] ){            $this->message_info("该帐号余额小于提现金额，不能提现");        }	    if(empty($info)){            $this->message_info("数据不存在");        }        if($info['ggc_pay_type']==1){            $mchid = $_W['account']['setting']['payment']['wechat']['mchid'];            $appid = $_W['account']['key'];            $signkey = $_W['account']['setting']['payment']['wechat']['signkey'];            $pem_cert = pdo_get($this->config,array('key'=>'cert_address','weid'=>$weid));            $pem_cert = $pem_cert['value'];            if(empty($pem_cert)){                $this->message_info("请上传支付证书");            }            $pem_key = pdo_get($this->config,array('key'=>'key_address','weid'=>$weid));            $pem_key = $pem_key['value'];            if(empty($pem_key)){                $this->message_info("请上传支付密钥");            }            $res = $this -> cash($info['ggc_code'],$info['openid'],$info['ggc_money'],$mchid,$appid,$signkey,'..'.$pem_cert,'..'.$pem_key);            //$res = $this -> cash($info['ggc_code'],$info['openid'],$info['ggc_money'],$mchid,$appid,$signkey,$pem_cert,$pem_key);            if($res['status']==1 and $res['data']['return_code'] == 'SUCCESS' and $res['data']['result_code']=='SUCCESS'){                //成功                $res = pdo_update($this->get_cash,array("ggc_type"=>20,'ggc_update_time'=>time()),array("ggc_id"=>$id,'weid'=>$weid));                //发送模版消息 todo                $sms = new Sms();                $sms->weid = $weid;                $msg_arr = array(                    "1"=>$account['m_name'],                    "2"=>$info['ggc_code'],                    "3"=>$info['ggc_money']."元",                    "4"=>date("Y-m-d H:i:s"),                    "5"=>empty($info['ggc_rate'])?"0.00":$info["ggc_rate"],                    "6"=>"成功",                    "7"=>"微信付款"                );                $this->Tokens();                $infos = $sms->send_out('get_cash_tmp',$msg_arr,$_W['account']['access_tokne'],$info['openid'],'',$info['ggc_form_id'],$weid,'AT0324');                //新增订阅消息 周龙 2020-02-27                $submsg = new \SubMsg();                $submsg->sendmsg("cash_money",$info['openid'],[$account['m_name'],$info['ggc_money']."元","成功",empty($info['ggc_rate'])?"0.00":$info["ggc_rate"],"提现时间:".date("Y-m-d H:i:s",time()).'\n'.'提现单号:'.$info['ggc_code']]);                pdo_update($this->member,array("m_money -="=>$info['ggc_money']),array("m_openid"=>$info['openid'],'weid'=>$weid));            }elseif ($res['status']==1 and $res['data']['return_code'] == 'SUCCESS' and $res['data']['result_code']=='FAIL' and $res['data']['err_code_des'] == "余额不足"){                //失败，余额不足                $res = pdo_update($this->get_cash,array("ggc_type"=>40,'ggc_content'=>'商户余额不足'),array("ggc_id"=>$id,'weid'=>$weid));            }elseif ($res['status']==1 and $res['data']['return_code'] == 'SUCCESS' and $res['data']['result_code']=='FAIL' and $res['data']['err_code_des'] != "余额不足"){                //失败,其他原因                $res = pdo_update($this->get_cash,array("ggc_type"=>30,'ggc_content'=>$res['data']['return_msg'].','.$res['data']['err_code_des']),array("ggc_id"=>$id,'weid'=>$weid));            }else{                $res = pdo_update($this->get_cash,array("ggc_type"=>30,'ggc_content'=>'提现失败'),array("ggc_id"=>$id,'weid'=>$weid));            }            $msg = $res['data']['err_code_des'];        }else{            pdo_update($this->member,array("m_money -="=>$info['ggc_money']),array("m_openid"=>$info['openid'],'weid'=>$weid));            $res = pdo_update($this->get_cash,array("ggc_type"=>20,'ggc_update_time'=>time()),array("ggc_id"=>$id,'weid'=>$weid));            $msg = '操作成功';        }        if(!empty($res)){            $this->message_info($msg, $this->createWebUrl('finance',array("op"=>'get_cash')), 'success');        }else{            $this->message_info('失败');        }	break;        //拒绝提现    case "sayNo":        if($_GPC['submit'] == '提交'){			//提交数据			$info = $_GPC['info'];			if(empty($info)){                $this->message_info('请填写拒绝理由');exit;			}			$data = [				'ggc_content'=>$info,                'ggc_type'=>30,                'weid'=>$weid,                'ggc_update_time'=>time(),			];			if($id){				$res = pdo_update($this->get_cash,$data,['ggc_id'=>$id]);			}			if(empty($res)){                $this->message_info('操作失败');			}else{                $this->message_info('操作成功', $this->createWebUrl('finance'), 'success');			}		}else{			if($id){				$info = pdo_get($this->get_cash,['ggc_id'=>$id,'weid'=>$weid]);			}		}		break;        //退款列表    case "back_money":        //退款管理        $stime=microtime(true);         $index=isset($_GPC['page'])?$_GPC['page']:1;        $pageIndex = $index;        $pageSize = 10;        $where =" ss.oss_id > 0 ";        $num = trim($_GPC['num']);        if(isset($num) && !empty($num) ) {            $where .= " and  ss.oss_go_code like '%".$num."%' ";        }        $buyer = trim($_GPC['buyer']);        if(isset($buyer) && !empty($buyer) ) {            $where .= " and ( ss.oss_buy_name like '%".$buyer."%' or ss.oss_buy_name like '%".base64_encode($buyer)."%' )";        }        $vg = trim($_GPC['vg']);        if(isset($vg) && !empty($vg) ) {            $where .= " and ( ss.oss_v_name like '%".$vg."%' or ss.oss_v_name like '%".base64_encode($vg)."%')";        }        $team = trim($_GPC['team']);        if(isset($team) && !empty($team) ) {            $where .= " and ( ss.oss_head_name like '%".$team."%' or ss.oss_head_name like '%".base64_encode($team)."%') ";        }        $contion = 'limit '.($pageIndex-1) * $pageSize .','. $pageSize;        $total_sql = "SELECT count(1) FROM (SELECT openid,gbm_oss_id FROM ".tablename("gpb_back_money")." WHERE weid={$weid}  ORDER BY gbm_add_time DESC) AS bmJOIN ".tablename("gpb_member")." AS m ON m.m_openid =bm.openid JOIN ".tablename("gpb_order_snapshot")." AS ss ON bm.gbm_oss_id = ss.oss_id where {$where}";//        $total= pdo_fetchcolumn('select count(*) from '.tablename($this->back_money)." as bm left join ".tablename($this->member)." as m on m.m_openid =bm.openid left join ".tablename($this->snapshot)." as ss on bm.gbm_oss_id = ss.oss_id where bm.weid =".$weid.$where);        $total= pdo_fetchcolumn($total_sql);        $page = pagination($total,$pageIndex,$pageSize);        //获取分页信息//        $sql = ' select m.m_nickname,ss.oss_head_name,ss.oss_buy_name,bm.gbm_go_code,ss.oss_v_name,ss.oss_g_name,bm.gbm_add_time,bm.gbm_money,bm.gbm_status,bm.gbm_id,bm.gpb_head_money from '.tablename($this->back_money)." as bm left join ".tablename($this->member)." as m on m.m_openid =bm.openid left join ".tablename($this->snapshot)." as ss on bm.gbm_oss_id = ss.oss_id where bm.weid =".$weid.$where." order by gbm_add_time desc ".$contion;        /**         * 2019-11-14         * 周龙         * sql优化效率         */        $sql = "         SELECT m.m_nickname,ss.oss_head_name,ss.oss_buy_name,bm.gbm_go_code,ss.oss_v_name,ss.oss_g_name,bm.gbm_add_time,bm.gbm_money,bm.gbm_status,bm.gbm_id,bm.gpb_head_money FROM ( SELECT * FROM ".tablename("gpb_back_money")." WHERE weid={$weid}  ORDER BY gbm_add_time DESC {$contion}) AS bmLEFT JOIN ".tablename("gpb_member")." AS m ON m.m_openid =bm.openid LEFT JOIN ".tablename("gpb_order_snapshot")." AS ss ON bm.gbm_oss_id = ss.oss_id where {$where}        ";//        exit(var_dump($sql));        $info = pdo_fetchall($sql);        if(is_array($info)){            foreach ($info as $k=>$v){                if($this->check_base64_out_json( $v['m_nickname'] )){                    $info[$k]['m_nickname'] = base64_decode( $v['m_nickname'] );                }                if($this->check_base64_out_json( $v['oss_head_name'] )){                    $info[$k]['oss_head_name'] = base64_decode( $v['oss_head_name'] );                }                if($this->check_base64_out_json( $v['oss_buy_name'] )){                    $info[$k]['oss_buy_name'] = base64_decode( $v['oss_buy_name'] );                }            }        }//        var_dump($info);exit;        break;        //查看退款详情    case "seeBackInfo":        if($_GPC['submit'] == '提交'){            //提交数据            $info = $_GPC['info'];            if(empty($info)){                $this->message_info('请填写拒绝理由');exit;            }            $data = [                'ggc_content'=>$info,                'ggc_type'=>30,                'weid'=>$weid            ];            if($id){                $res = pdo_update($this->get_cash,$data,['ggc_id'=>$id]);            }            if(empty($res)){                $this->message_info('操作失败');            }else{                $this->message_info('操作成功', $this->createWebUrl('finance'), 'success');            }        }else{            if($id){                $sql = 'select * from '.tablename($this->back_money)." as bm left join ".tablename($this->member)." as m on m.m_openid =bm.openid left join ".tablename($this->snapshot)." as ss on bm.gbm_oss_id = ss.oss_id where bm.weid =".$weid." and bm.gbm_id = ".$id;                $info = pdo_fetch($sql);                if(is_array($info)){                        if($this->check_base64_out_json( $info['m_nickname'] )){                            $info['m_nickname'] = base64_decode( $info['m_nickname'] );                        }                    if($this->check_base64_out_json( $info['oss_address_name'] )){                        $info['oss_address_name'] = base64_decode( $info['oss_address_name'] );                    }                }                $icon = "../addons/group_buy/icon-custom.jpg";                if(!file_exists($icon)){                    $icon = "../addons/group_buy/icon.jpg";                }//                var_dump($info);            }else{                $this->message_info('非法访问');            }        }        break;        //拒绝退款    case "backSayNo":        if($_GPC['submit'] == '提交'){            //提交数据            $info = $_GPC['info'];            $act = trim($_GPC['act']);            if(empty($info)){                $this->message_info('请填写拒绝理由');exit;            }            $data = [                'gbm_reason'=>$info,                'gbm_status'=>30,                'weid'=>$weid            ];            pdo_begin();            if($id){                $res = pdo_update($this->back_money,$data,['gbm_id'=>$id]);            }            if(empty($res)){                $this->message_info('操作失败');            }else{                $back_money = pdo_get($this->back_money,array('gbm_id'=>$id));                pdo_update($this->snapshot,array("oss_ggo_status"=>60),array("oss_id"=>$back_money['gbm_oss_id']));                pdo_commit();                $this->message_info('操作成功', $this->createWebUrl('finance',array("op"=>"back_money")), 'success');            }        }else{            if($id){                $info = pdo_get($this->back_money,array('gbm_id'=>$id,'weid'=>$weid));            }else{                $this->message_info('非法访问');            }            $act = trim($_GPC['act']);        }        break;	case 'the_line_bank':		$id = trim($_GPC['id']);        if(empty($id)){            $this->message_info('非法访问');        }		$info = pdo_get($this->back_money,array('gbm_id'=>$id,'weid'=>$weid) );        $back_money = $info['gbm_money'];        if(empty($info)){            $this->message_info('退款信息错误');        }        $order = pdo_get($this->order,array("go_code"=>$info['gbm_go_code'],"weid"=>$weid));        if(empty($order)){            $this->message_info('订单信息错误');        }        $account = pdo_get($this->member,array('m_openid'=>$info['openid'],'weid'=>$weid));        $openid = $account['m_openid'];        if(empty($account)){            $this->message_info('用户信息错误');        }        $goods = pdo_get($this->snapshot,array("oss_id"=>$info['gbm_oss_id']));        //2020-03-18 周龙 增加库存销量退回        $gid = $goods['oss_gid'];        $num = $goods['oss_g_num'];        $optionid = $goods['oss_ggo_id'];        pdo_begin();//开始事务        //区分情况 1单规格 2多规格        if(empty($optionid) || intval($optionid)<1){            //单规格            //直接退回库存和销量            $back_sql = "update ".tablename("gpb_goods_stock")." set num=num+{$num},sale_num=sale_num-{$num} where goods_id={$gid}";            pdo_query($back_sql);        }else{            //多规格            //先查询是否长期售卖            $is_long_sale = pdo_fetchcolumn("select ggo_stock from ".tablename("gpb_goods_option")." where ggo_id={$optionid}");            $is_long_sale = intval($is_long_sale);            if($is_long_sale!==-1){                //非长期售卖多规格返还库存                $back_sql = "update ".tablename("gpb_goods_option")." set ggo_stock=ggo_stock+{$num} where ggo_id={$optionid}";                pdo_query($back_sql);                $back_sql = "update ".tablename("gpb_goods_stock")." set num=num+{$num} where goods_id={$gid}";                pdo_query($back_sql);            }            //退还销量            $back_sql = "update ".tablename("gpb_goods_stock")." set sale_num=sale_num-{$num} where goods_id={$gid}";            pdo_query($back_sql);        }        //2020-03-18 周龙 线下退款扣除佣金        //step1 用户是否已收货        if(intval($order['go_status'])===100){            //2020-04-03 周龙 线下退款回滚团长分销佣金            $backhead_money = $_W['siteroot'].'/app/index.php?i='.$this->weid."&from=wxapp&m=group_buy&a=wxapp&c=entry&do=headrefundmoney";            load()->func('communication');            $res = ihttp_request($backhead_money,['gbm_id'=>[$_GPC['id']]]);            if(!empty($_GPC['debug'])){                ini_set('display_errors',1);                error_reporting(E_ALL);                echo "<pre/>";                var_dump($res);                die;            }            //用户已收货 或 后台确认收货            //判断佣金是否大于0            if(doubleval($goods['oss_commission'])>0){                //大于0 判断佣金是否已审核到账                $has_pass = pdo_fetch("select * from ".tablename("gpb_order_stream")." where gos_stream_type=3 and gos_go_code='{$goods['oss_go_code']}' and gos_team_openid='{$order['go_team_openid']}' and gos_type=2");                if(!empty($has_pass)){                    //查询是否已经退款                    $has_refund = pdo_fetchcolumn("select sum(gos_order_money) from ".tablename("gpb_order_stream")." where gos_stream_type=3 and gos_go_code='{$goods['oss_go_code']}' and gos_type=1");                    if($has_pass['gos_status']==2 && $has_refund<$has_pass['gos_order_money']){                        $log = $has_pass;                        //佣金已审核 发起扣除                        $log['gos_code'] = date('Ymd',time()).$this->nextId();                        $log['gos_go_code'] = $goods['oss_go_code'];                        $log['gos_stream_type'] = 3;                        $log['gos_type'] = 1;                        $log['gos_order_money'] = $goods['oss_commission'];                        unset($log['gos_id']);                        //先扣除后加日志                        $head_openid = $order['go_team_openid'];                        $refund_sql = "update ".tablename("gpb_member")." set m_money=m_money-{$goods['oss_commission']} where m_openid='{$head_openid}' and weid='{$weid}' ";                        $res = pdo_query($refund_sql);                        if($res){                            //扣除成功加入日志                            $result = pdo_insert("gpb_order_stream",$log);                            if(!$result){                                pdo_rollback();                                $this->message_info('退款失败:扣除团长佣金失败！');                            }                        }else{                            pdo_rollback();                            $this->message_info('退款失败:扣除团长佣金失败！');                        }                    }                    //第二种情况佣金未审核，直接状态改为拒绝                    if($has_pass['gos_status']==1){                        $res = pdo_query(" update ".tablename("gpb_order_stream")." set gos_status=-1,gos_commet='{$has_pass['gos_commet']},用户退款系统自动拒绝佣金审核'  where gos_id={$has_pass['gos_id']}");                        if(!$res){                            pdo_rollback();                            $this->message_info('退款失败:佣金审核状态变更失败');                        }                    }                }            }        }		//修改 快照表 订单表  退款表的状态		//判断该订单是否还有正常商品        $goods_count = pdo_fetchcolumn("select count(*) from ".tablename($this->snapshot)." where oss_go_code=".$order['go_code']." and oss_ggo_status=1");        //是否是最后一件商品        if($goods_count <= 0 ){//            2020-03-06 周龙 增加退款日志            $order_log = array(                'gol_uid'=>$_W['uid'],                'gol_add_time'=>time(),                'gol_des'=>'管理员操作线下退款',                'gol_go_code'=>$info['gbm_go_code'],                'gol_u_name'=>$_W['username']            );            $res = pdo_insert($this->order_log,$order_log);            if(empty($res)){                //加入之日不成功 写入文件日志                $f = fopen("./order_log.log","a+");                $content = serialize($order_log);                $content = "\n".date("Y-m-d H:i:s")."\n插入日志不成功,{$res}\n".$content;                fwrite($f,$content);                fclose($f);            }            //取消订单            $res3 = pdo_update("gpb_order",array('go_status'=>'110'),array("go_id"=>$order['go_id']));        }		$res1 = pdo_update($this->snapshot,array("oss_ggo_status"=>70),array("oss_id"=>$info['gbm_oss_id']));		$res2 = pdo_update($this->back_money,array("gbm_status"=>20),array("gbm_id"=>$id,'weid'=>$weid));		if($res1 && $res2 && $res3){			pdo_commit();			$this->message_info('退款成功',$this->createWebUrl('order',array("op"=>"afterSale")), 'success');		}else{			pdo_rollback();			$this->message_info('退款失败');		}	break;    //确认退款    case 'sure_back_money':        $id = trim($_GPC['id']);        if(empty($id)){            $this->message_info('非法访问');        }        $info = pdo_get($this->back_money,array('gbm_id'=>$id,'weid'=>$weid) );        $back_money = $info['gbm_money'];        if(empty($info)){            $this->message_info('退款信息错误');        }        $order = pdo_get($this->order,array("go_code"=>$info['gbm_go_code'],"weid"=>$weid));        if(empty($order)){            $this->message_info('订单信息错误');        }        $account = pdo_get($this->member,array('m_openid'=>$info['openid'],'weid'=>$weid));        $openid = $account['m_openid'];        if(empty($account)){            $this->message_info('用户信息错误');        }        $goods = pdo_get($this->snapshot,array("oss_id"=>$info['gbm_oss_id']));		//判断是否能够退款//		1.团长的佣金审核是否充足  小于0 为不能退款		$back_commission = $goods['oss_commission'];//新算法        pdo_begin();		if($order['go_is_cash'] == 1 && $order['go_status'] == 100) {            //如果已审核还要回滚用户的余额            $team_openid = pdo_get($this->member,array('m_openid'=>$order['go_team_openid'],'weid'=>$weid),array('m_money'));            if($team_openid['m_money'] - $back_commission < 0){            	$this->message_info('团长佣金已结算，不能退款!');            }        }        if($order['go_pay_type'] == 1 or $order['go_pay_type']==3){            if($back_money >0 && $order['go_release_price'] >0 ){                $release_back_money = 0;                if($back_money > $order['go_release_price']){                    $release_back_money = $order['go_release_price'];                    pdo_update('gpb_order',array('go_release_price -='=>$release_back_money),array('go_id'=>$order['go_id']));                    $back_money -= floatval($release_back_money);                }elseif($order['go_release_price'] >= $back_money){                    $release_back_money = $back_money;                    pdo_update('gpb_order',array('go_release_price -='=>$release_back_money),array('go_id'=>$order['go_id']));                    $back_money -= floatval($release_back_money);                }                if($release_back_money>0){//					当有返利金参与退返利金                    $recharge_list = pdo_get('gpb_recharge_list',array('openid'=>$order['openid'],'weid'=>$weid,'overdue'=>1,'time'=>strtotime(date('Ymd',$order['go_add_time']))) );                    $release_back_money_res = pdo_update('gpb_recharge_list',array('money +='=>$order['go_release_price'],'use_money -='=>$order_info_v['go_release_price']),array('id'=>$recharge_list['id']));                    if(empty($release_back_money_res)){                        pdo_rollback();                        $this->message_info("返利金退款失败");                    }                    //存入日志                    $recharge_log_data = array(                        'st'=>1,                        'uid'=>$account['m_id'],                        'openid'=>$account['m_openid'],                        'info'=>'退款，退还返利金'.$release_back_money,                        'type'=>3,                        'status'=>1,                        'create_time'=>time(),                        'weid'=>$weid,                        'money'=>$release_back_money,                        'l_type'=>1,                        'remarks'=>'订单号：'.$order['go_code'].',快照号：'.$info['gbm_oss_id'],                        'pay_f'=>3                    );                    $recharge_log_data_res = pdo_insert('gpb_recharge_log',$recharge_log_data);                    if(empty($recharge_log_data_res)){                        pdo_rollback();                        $this->message_info("返利金退款日志有误");                    }                }            }            if($back_money >0 && $order['go_balance_price'] >0 ){                //当有余额参与退款时                $balance_back_money = 0;                if($back_money > $order['go_balance_price']){                    $balance_back_money = $order['go_balance_price'];                    pdo_update('gpb_order',array('go_balance_price -='=>$balance_back_money),array('go_id'=>$order['go_id']));                    $back_money -= floatval($balance_back_money);                }elseif($order['go_balance_price']>=$back_money){                    $balance_back_money = $back_money;                    pdo_update('gpb_order',array('go_balance_price -='=>$balance_back_money),array('go_id'=>$order['go_id']));                    $back_money -= floatval($balance_back_money);                }                if($balance_back_money>0){                    $balance_back_money_res = pdo_update($this->member,array("m_money_balance +="=>$balance_back_money),array("m_openid"=>$order['openid'],'weid'=>$weid));                    if(empty($balance_back_money_res)){                        pdo_rollback();                        $this->message_info("余额退款失败");                    }                    //存入日志                    $recharge_log_data = array(                        'st'=>1,                        'uid'=>$account['m_id'],                        'openid'=>$account['m_openid'],                        'info'=>'退款，退还余额'.$balance_back_money,                        'type'=>3,                        'status'=>1,                        'create_time'=>time(),                        'weid'=>$weid,                        'money'=>$balance_back_money,                        'l_type'=>1,                        'remarks'=>'订单号：'.$order['go_code'].',快照号：'.$info['gbm_oss_id'],                        'pay_f'=>3                    );                    $recharge_log_data_res = pdo_insert('gpb_recharge_log',$recharge_log_data);                    if(empty($recharge_log_data_res)){                        pdo_rollback();                        $this->message_info("余额退款日志有误");                    }                }            }            if($back_money >0 && $order['go_wx_price'] >0 ){                //判断是否是第一次存入                if($order['go_wx_price_all'] <=0 ){                    $order['go_wx_price_all'] = $order['go_wx_price'];                    pdo_update('gpb_order',array('go_wx_price_all'=> $order['go_wx_price_all']),array('go_id'=>$order['go_id']));                }                //当有微信支付参与退款时                $wx_back_money = 0;                if($back_money > $order['go_wx_price']){                    $wx_back_money = $order['go_wx_price'];                    pdo_update('gpb_order',array('go_wx_price -='=>$wx_back_money),array('go_id'=>$order['go_id']));                    $back_money -= floatval($wx_back_money);                }elseif($order['go_wx_price']>=$back_money){                    $wx_back_money = $back_money;                    pdo_update('gpb_order',array('go_wx_price -='=>$wx_back_money),array('go_id'=>$order['go_id']));                    $back_money -= floatval($wx_back_money);                }                $mchid = $_W['account']['setting']['payment']['wechat']['mchid'];                $appid = $_W['account']['key'];                $signkey = $_W['account']['setting']['payment']['wechat']['signkey'];                $pem_cert = pdo_get($this->config,array('key'=>'cert_address','weid'=>$weid));                $pem_cert = $pem_cert['value'];                if(empty($pem_cert)){                    pdo_rollback();                    $this->message_info("请上传支付证书");                }                /*ini_set('display_errors',1);                error_reporting(E_ALL);*/                $pem_key = pdo_get($this->config,array('key'=>'key_address','weid'=>$weid));                $pem_key = $pem_key['value'];                if(empty($pem_key)){                    pdo_rollback();                    $this->message_info("请上传支付密钥");                }                $res = $this -> refund_info($appid,$mchid,$signkey,$info['gbm_go_code'],$info['gbm_code'],$order['go_wx_price_all'],round($wx_back_money,2,PHP_ROUND_HALF_EVEN),"..".$pem_cert,"..".$pem_key);                /*echo "<pre/>";                var_dump($res);*/				//写入日志文件                $str = serialize($res);                @$this->logger('退款时-ERR_CODE_DES:'.$res['data']['ERR_CODE_DES'].',ERR_CODE:'.$res['data']['ERR_CODE'].','.$str);                if(!empty($res['data']['err_code']) || !empty($res['data']['ERR_CODE'])){                    //退款失败情况下                    //先回滚                    pdo_rollback();                    //再写入失败信息                    $back_return = pdo_update("gpb_back_money",['gbm_reason'=>'退款失败，'.$res['data']['ERR_CODE_DES']],['gbm_id'=>$id]);                    /*echo "in ";                    die;*/                    $this->message_info("退款失败，".$res['data']['ERR_CODE_DES']);                }else{                    if($res['status']== 1 and $res['data']['RETURN_CODE'] == 'SUCCESS' and $res['data']['RETURN_MSG']=='OK' and $res['data']['RESULT_CODE']!='FAIL'){                        //退款成功将库存补回                        //先查询 快照表                        if($goods['oss_ggo_id']){                            //多规格                            $res = pdo_update("gpb_goods_option",array('ggo_stock +='=>$goods['oss_g_num']),array('ggo_id'=>$goods['oss_ggo_id']));                            $res = pdo_update("gpb_goods_stock",array('num +='=>$goods['oss_g_num'],'sale_num -='=>$goods['oss_g_num']),array('goods_id'=>$goods['oss_gid']));                        }else{                            //单规格 //扣销量                            $res = pdo_update("gpb_goods_stock",array('num +='=>$goods['oss_g_num'],'sale_num -='=>$goods['oss_g_num']),array('goods_id'=>$goods['oss_gid']));                        }                        if($res){                            //库存回滚失败                        }                    }elseif ($res['status']==1 and $res['data']['return_code'] == 'SUCCESS' and $res['data']['result_code']=='FAIL' and !empty($res['data']['err_code_des']) ){                        //失败，余额不足                        pdo_update($this->snapshot,array('oss_ggo_status'=>60),array("oss_id"=>$info['gbm_oss_id']));                        $res = pdo_update($this->back_money,array("gbm_status"=>40,'gbm_reason'=>$res['data']['err_code_des']),array("gbm_id"=>$id,'weid'=>$weid));                    }else{                        $str = '退款失败, ';                        $str .= $res['data']['ERR_CODE_DES'];                        pdo_update($this->snapshot,array('oss_ggo_status'=>60),array("oss_id"=>$info['gbm_oss_id']));                        $res = pdo_update($this->back_money,array("gbm_status"=>40,'gbm_reason'=>$str),array("gbm_id"=>$id,'weid'=>$weid));                    }                }            }        }elseif($order['go_pay_type'] ==2){            if($back_money >0 && $order['go_release_price'] >0 ){                $release_back_money = 0;                if($back_money > $order['go_release_price']){                    $release_back_money = $order['go_release_price'];                    $back_money -= $release_back_money;                }elseif($order['go_release_price']>=$back_money){                    $release_back_money = $back_money;                    pdo_update('gpb_order',array('go_release_price -='=>$release_back_money),array('go_id'=>$order['go_id']));                    $back_money = 0;                }                if($release_back_money>0){                    //当有返利金参与退返利金                    $recharge_list = pdo_get('gpb_recharge_list',array('openid'=>$order['openid'],'weid'=>$weid,'overdue'=>1,'time'=>strtotime(date('Ymd',$order['go_add_time']))) );                    $release_back_money_res = pdo_update('gpb_recharge_list',array('money +='=>$order['go_release_price'],'use_money -='=>$order_info_v['go_release_price']),array('id'=>$recharge_list['id']));                    if(empty($release_back_money_res)){                        pdo_rollback();                        $this->message_info("返利金退款失败");                    }                    //存入日志                    $recharge_log_data = array(                        'st'=>1,                        'uid'=>$account['m_id'],                        'openid'=>$account['m_openid'],                        'info'=>'退款，退还返利金'.$release_back_money,                        'type'=>3,                        'status'=>1,                        'create_time'=>time(),                        'weid'=>$weid,                        'money'=>$release_back_money,                        'l_type'=>1,                        'remarks'=>'订单号：'.$order['go_code'].',快照号：'.$info['gbm_oss_id'],                        'pay_f'=>3                    );                    $recharge_log_data_res = pdo_insert('gpb_recharge_log',$recharge_log_data);                    if(empty($recharge_log_data_res)){                        pdo_rollback();                        $this->message_info("返利金退款日志有误");                    }                }            }            if($back_money >0 && $order['go_balance_price'] >0 ){                //当有余额参与退款时                $balance_back_money = 0;                if($back_money > $order['go_balance_price']){                    $balance_back_money = $order['go_balance_price'];                    $back_money -= $balance_back_money;                }elseif($order['go_balance_price']>=$back_money){                    $balance_back_money = $back_money;                    pdo_update('gpb_order',array('go_balance_price -='=>$balance_back_money),array('go_id'=>$order['go_id']));                    $back_money = 0;                }                $balance_back_money_res = pdo_update($this->member,array("m_money_balance +="=>$balance_back_money),array("m_openid"=>$order['openid'],'weid'=>$weid));                if(empty($balance_back_money_res)){                    pdo_rollback();                    $this->message_info("余额退款失败");                }                //存入日志                $recharge_log_data = array(                    'st'=>1,                    'uid'=>$account['m_id'],                    'openid'=>$account['m_openid'],                    'info'=>'退款，退还余额'.$balance_back_money,                    'type'=>3,                    'status'=>1,                    'create_time'=>time(),                    'weid'=>$weid,                    'money'=>$balance_back_money,                    'l_type'=>1,                    'remarks'=>'订单号：'.$order['go_code'].',快照号：'.$info['gbm_oss_id'],                    'pay_f'=>3                );                $recharge_log_data_res = pdo_insert('gpb_recharge_log',$recharge_log_data);                if(empty($recharge_log_data_res)){                    pdo_rollback();                    $this->message_info("余额退款日志有误");                }            }			if($goods['oss_ggo_id']){						//多规格				$res = pdo_update("gpb_goods_option",array('ggo_stock +='=>$goods['oss_g_num']),array('ggo_id'=>$goods['oss_ggo_id']));				$res = pdo_update("gpb_goods_stock",array('num +='=>$goods['oss_g_num'],'sale_num -='=>$goods['oss_g_num']),array('goods_id'=>$goods['oss_gid']));			}else{				//单规格 //扣销量				$res = pdo_update("gpb_goods_stock",array('num +='=>$goods['oss_g_num'],'sale_num -='=>$goods['oss_g_num']),array('goods_id'=>$goods['oss_gid']));			}        }        //发送模版消息 todo+++++++++++++++++++++++        $sms = new Sms();        $sms->weid = $weid;        $msg_arr = array(            "1"=>$info['gbm_go_code'],            "2"=>date("Y-m-d H:i:s"),            "3"=>$info['gbm_money']."元",            "4"=>$goods['oss_g_name'].','.$goods['oss_g_num'].'件',            "5"=>'退款成功',        );        $this->Tokens();        @$infos = $sms->send_out('back_money_tmp',$msg_arr,$_W['account']['access_tokne'],$info['openid'],'',$info['gbm_form_id'],$weid,'AT0787');        //新增订阅消息 周龙 2020-02-27        $submsg = new \SubMsg();        $sub_arr = [            $info['gbm_go_code'],            date("Y-m-d H:i:s",time()),            $info['gbm_money']."元",            $goods['oss_g_name'].','.$goods['oss_g_num'].'件',            '退款成功'        ];        $submsg->sendmsg("refund_msg",$info['openid'],$sub_arr);        //退款成功需要生成流水        //存入退款流水        $data_stream = array(            'gos_code'=>date('Ymd',time()).$this->nextId(),//流水号            'gos_go_code'=>$info['gbm_go_code'],//订单号            'gos_stream_type'=>2,            'gos_type'=>2,            'gos_commet'=>'用户申请退款成功',            'gos_owner'=>'平台',            'gos_order_money'=>$info['gbm_money'],            'gos_real_money'=>$info['gbm_money'],            'gos_payer'=>$account['m_nickname'],            'gos_status'=>2,            'gos_add_time'=>time(),            'gos_sure_pay_time'=>time(),            'weid'=>$this->weid,            'gos_pay_type'=>1,            'gos_team'=>$goods['oss_head_name'],            'gos_payer_openid'=>$account['m_openid'],            'gos_team_openid'=>$goods['oss_head_openid']        );        pdo_insert($this->stream,$data_stream);        //有优惠卷的时候释放        if($order['go_fdc_id']>0){            $goods_count = pdo_fetchcolumn("select count(*) from ".tablename($this->snapshot)." where oss_go_code=".$order['go_code']." and oss_ggo_status=1");            //是否是最后一件商品            if($goods_count <1 ){                pdo_update($this->user_coupon,array('is_use'=>0),array('id'=>$order['go_fdc_id']));            }        }        //佣金回滚//        $back_commission = $info['gbm_money']/$order['go_real_price']*$order['go_commission'];//老算法        $back_commission = $goods['oss_commission'];//新算法        pdo_update($this->order,array('go_commission -='=>$back_commission),array('go_id'=>$order['go_id']));        if($order['go_is_cash'] ==1){            //如果已审核还要回滚用户的余额            pdo_update($this->member,array("m_money -="=>$back_commission),array("m_openid"=>$order['go_team_openid'],'weid'=>$weid));            //2020 -03 -19 周龙 添加佣金日志记录增加退款扣除日志            $stream_info = pdo_fetch("select * from ".tablename($this->stream)." where gos_stream_type=3 and gos_go_code={$order['go_code']} and gos_type=2");            $log = $stream_info;            $log['gos_add_time'] = time();            $log['gos_code'] = date('Ymd',time()).$this->nextId();            $log['gos_type'] = 1;            $log['gos_commet'] = "用户退款成功，扣除佣金";            unset($log['gos_id']);            pdo_insert($this->stream,$log);        }else{            //2020-03-19 周龙 未审核佣金日志直接拒绝审核            $stream_info = pdo_fetch("select * from ".tablename($this->stream)." where gos_stream_type=3 and gos_go_code={$order['go_code']} and gos_type=2");            pdo_update($this->stream,['gos_status'=>-1,'gos_commet'=>$stream_info['gos_commet'].",用户已退款，系统自动拒绝佣金审核"],['gos_id'=>$stream_info['gos_id']]);        }        //判断该订单是否还有正常商品        $goods_count = pdo_fetchcolumn("select count(*) from ".tablename($this->snapshot)." where oss_go_code=".$order['go_code']." and oss_ggo_status=1");        //是否是最后一件商品        if($goods_count <= 0 ){            //取消订单            pdo_update($this->order,array('go_status'=>110),array("go_id"=>$order['go_id']));        }        //成功 改状态        $res = pdo_update($this->back_money,array("gbm_status"=>20),array("gbm_id"=>$id,'weid'=>$weid));        pdo_update($this->snapshot,array("oss_ggo_status"=>70),array("oss_id"=>$info['gbm_oss_id']));		//回滚分销的佣金		$distr = pdo_get('gpb_config',array('key'=>'distribution_type_retreat','weid'=>$this->weid),array('value'));		if(file_exists('../addons/group_buy_plugin_distribution/distribution.php') && $distr['value'] == 1){			require_once '../addons/group_buy_plugin_distribution/distribution.php';			$new_distribution = new distribution($this->weid);			$new_distribution->deduct_a_commission($info['gbm_oss_id']);		}        pdo_commit();		//回滚团长分销佣金        $backhead_money = $_W['siteroot'].'/app/index.php?i='.$this->weid."&from=wxapp&m=group_buy&a=wxapp&c=entry&do=headrefundmoney";        load()->func('communication');        $res = ihttp_request($backhead_money,['gbm_id'=>[$_GPC['id']]]);        if(!empty($_GPC['debug'])){            ini_set('display_errors',1);            error_reporting(E_ALL);            echo "<pre/>";            var_dump($res);            die;        }        if(trim($_GPC['act'])=='afterSale'){            $this->message_info($res['data']['err_code_des'], $this->createWebUrl('order',array("op"=>'afterSale')), 'success');        } else {            $this->message_info($res['data']['err_code_des'], $this->createWebUrl('finance',array("op"=>'back_money')), 'success');        }        exit();        break;        //交易流水    case 'stream_index':        $index=isset($_GPC['page'])?$_GPC['page']:1;        $pageIndex = $index;        $pageSize = 10;        $where ="";        //key关键词        $key = trim($_GPC['key']);        $key_field = trim($_GPC['key_field']);        if(!empty($key_field)){            switch ($key_field){                case 'order':                    $where .= " and  s.gos_go_code like '%".$key."%' ";                    break;                case 'num':                    $where .= " and  s.gos_code like '%".$key."%' ";                    break;                case 'team':                    $where .= " and ( s.gos_team like '%".$key."%' or s.gos_team like '%".base64_encode($key)."%')";                    break;            }        }        //时间类型        $time_type = trim($_GPC['time_type']);        if(!empty($time_type)){            switch ($time_type){                case 'add_time':                    if( isset($_GPC['time']) and !empty($_GPC['time'])  ) {                        $where .= " and  gos_add_time >= ".strtotime($_GPC['time']['start'])." and gos_add_time <=".(strtotime($_GPC['time']['end']));                    }                    break;            }        }        $contion = 'limit '.($pageIndex-1) * $pageSize .','. $pageSize;        $sql = "select * from ".tablename($this->stream)." as s where (gos_stream_type =1 or gos_stream_type =2) and s.weid =".$weid.$where."  order by gos_add_time desc ".$contion;        $total= pdo_fetchcolumn("select count(*) from ".tablename($this->stream)." as s  where (gos_stream_type =1 or gos_stream_type =2)  and s.weid =".$weid.$where);        //获取分页信息        $page = pagination($total,$pageIndex,$pageSize);        $info = pdo_fetchall($sql);        if(is_array($info)){            foreach ($info as $k=>$v){                if($this->check_base64_out_json($v['gos_owner'])){                    $info[$k]['gos_owner'] = base64_decode($v['gos_owner']);                }                if($this->check_base64_out_json($v['gos_payer'])){                    $info[$k]['gos_payer'] = base64_decode($v['gos_payer']);                }                if($this->check_base64_out_json($v['gos_team'])){                    $info[$k]['gos_team'] = base64_decode($v['gos_team']);                }            }        }        break;    //佣金流水    case 'stream_commission':        $index=isset($_GPC['page'])?$_GPC['page']:1;        $pageIndex = $index;        $pageSize = 10;        $where ="";        $num = trim($_GPC['num']);        if(isset($num) && !empty($num) ) {            $where .= " and  s.gos_code like '%".$num."%' ";        }        $order = trim($_GPC['order']);        if(isset($order) && !empty($order) ) {            $where .= " and  s.gos_go_code like '%".$order."%' ";        }        $team = trim($_GPC['team']);        if(isset($team) && !empty($team) ) {            $where .= " and ( s.gos_team like '%".$team."%' or s.gos_team like '%".base64_encode($team)."%')";        }        $contion = 'limit '.($pageIndex-1) * $pageSize .','. $pageSize;        $sql = "select * from ".tablename($this->stream)." as s left join ".tablename($this->order)." as o on o.go_code = s.gos_go_code where gos_stream_type =3 and s.weid =".$weid.$where."  order by gos_add_time desc ".$contion;		        $total= pdo_fetchcolumn("select count(*) from ".tablename($this->stream)." as s  where gos_stream_type =3 and s.weid =".$weid.$where);        //获取分页信息        $page = pagination($total,$pageIndex,$pageSize);        $info = pdo_fetchall($sql);        if(is_array($info)){            foreach ($info as $k=>$v){                if($this->check_base64_out_json($v['gos_owner'])){                    $info[$k]['gos_owner'] = base64_decode($v['gos_owner']);                }                if($this->check_base64_out_json($v['gos_payer'])){                    $info[$k]['gos_payer'] = base64_decode($v['gos_payer']);                }                if($this->check_base64_out_json($v['gos_team'])){                    $info[$k]['gos_team'] = base64_decode($v['gos_team']);                }            }        }        break;        //确认线下退款后设置退款成功    case 'downBackMoney':        $id = trim($_GPC['id']);        if($id){            $old = pdo_get($this->back_money,array("gbm_id"=>$id));            //$res = pdo_update($this->order,['m_status'=>-1],['m_id'=>$id,'weid'=>$weid]);            $res = pdo_update($this->back_money,array('gbm_back_money_type'=>2,'gbm_under_line_time'=>time(),'gbm_status'=>20),array('weid'=>$weid,'gbm_id'=>$id));            pdo_update($this->snapshot,array('oss_ggo_status'=>70),array('oss_id'=>$old['gbm_oss_id']));            if($res){                echo json_encode(['status'=>0,'msg'=>'确认线下退款成功']);exit;            }else{                echo json_encode(['status'=>1,'msg'=>'确认线下退款成功失败']);exit;            }        }else{            echo json_encode(['status'=>1,'msg'=>'操作失败']);exit;        }        break;    case 'batchAudit':        //批量一键审核        $ids = trim($_GPC['ids'],',');        if(empty($ids)){            echo json_encode(['status'=>1,'msg'=>'请勾选需要哪些进行批量审核']);exit;        }		//判断是否开启了自动审核  开启了自动审核  就不能进行人工审核了    避免多算佣金的情况		//判断是否开启了人工审核		$confgi = pdo_get('gpb_config',array('key'=>'auto_sure_head_commission','weid'=>$this->weid));        if($confgi['value'] == 1){        	echo json_encode(['status'=>1,'msg'=>'手动审核佣金需关闭自动审核']);exit;        }        $id_arr = explode(',',$ids);        pdo_begin();        foreach ($id_arr as $k =>$v){            //查询该流水信息            $stream = pdo_get('gpb_order_stream',array('gos_id'=>$v,'weid'=>$weid ));            if(empty($stream)){                continue;            }        	//判断当前id的状态是否是已审核        	if($stream['gos_status'] == 2){        		continue;        	}            //查询订单信息            $order = pdo_get('gpb_order',array('go_code'=>$stream['gos_go_code'],'weid'=>$weid));            if(empty($order)){                continue;            }            //佣金审核的信息            $data_order = [                'go_is_cash'=>1,                'go_commission_comment'=>'一键批量审核操作',                'go_commission_time'=>time(),            ];            //存审核到订单            pdo_update($this->order,$data_order,array('go_code'=>$stream['gos_go_code'],'weid'=>$weid));            //存佣金到会员余额            pdo_update($this->member,array('m_money +='=>$order['go_commission']),array('m_openid'=>$order['go_team_openid'],'weid'=>$weid));            //修改流水            $data_stream = array(                'gos_real_money'=>$order['go_commission'],                'gos_status'=>2,                'gos_commet'=>$stream['gos_commet'].',后审核通过该佣金,',                'gos_sure_pay_time'=>time(),            );            pdo_update($this->stream,$data_stream,array('gos_id'=>$stream['gos_id']));        }        pdo_commit();        echo json_encode(['status'=>0,'msg'=>'审核成功']);exit;        break;    case 'config':        if($_GPC['submit'] == '提交'){            //提交数据//            echo "<pre/>";//            var_dump($_POST);exit;            unset($_POST['submit']);            //检查是否提交的有提现方式            $cash_type_id = pdo_fetchcolumn("select `id` from ".tablename($this->config)." where weid={$weid} and `key`='cash_type'");            if(empty($_POST[$cash_type_id])){                $this->message_info("请设置至少一种提现方式");            }            pdo_begin();            foreach ($_POST as $k =>$v){                $v = is_array($v)?serialize($v):$v;                $sql = "update ".tablename($this->config)." set `value` = '".$v."',time=".time()." where id =".$k;                $res = pdo_query($sql);            }            pdo_commit();            if(!empty($res)){                $this->message_info("修改配置成功",$this->createWebUrl('finance',array('op'=>'config')), 'success');            }else{                $this->message_info("修改配置失败");            }        }else{            //团长佣金流水自动审核开关            $auto_sure_head_commission = pdo_get($this->config,array('key'=>'auto_sure_head_commission','weid'=>$weid));            if(empty($auto_sure_head_commission) ){                pdo_query("INSERT  INTO ".tablename('gpb_config')." (`name`,`value`,`type`,`time`,`weid`,`status`,`key`) VALUES ('团长佣金流水自动审核开关','2','22',".time().",".$weid.",1,'auto_sure_head_commission');");            }            $auto_sure_head_commission = pdo_get($this->config,array('key'=>'auto_sure_head_commission','weid'=>$weid));//            $cash_min_price = pdo_get($this->config,array('key'=>'cash_min_price','weid'=>$weid));//            if(empty($cash_min_price) ){////                pdo_query("INSERT  INTO ".tablename('gpb_config')." (`name`,`value`,`type`,`time`,`weid`,`status`,`key`) VALUES ('团长佣金最低提现金额','0','3',".time().",".$weid.",1,'cash_min_price');");////            }            //2020 -03-09 周龙 添加前端提现配置            $cash_type = pdo_fetch("select `value`,`id` from ".tablename($this->config)." where `key`='cash_type' and weid={$weid}");            if(empty($cash_type)){                $auto_cash_type = [                    1,                    2,                    3                ];                $sql = "insert into ".tablename($this->config)."(`name`,`value`,`type`,`time`,`weid`,`status`,`key`) VALUES ('前端提现配置','".serialize($auto_cash_type)."','22',".time().",".$weid.",1,'cash_type');";                pdo_run($sql);                $cash_type = pdo_fetch("select `value`,`id` from ".tablename($this->config)." where `key`='cash_type' and weid={$weid}");            }            $cash_type['value'] = unserialize($cash_type['value']);        }        break;}include $this -> template('web/' . $do . '/' . $op);?>