<?php//通知集成class Sms {	/**	 * 阿里云短信	 * @param $mobile 发送人电话号码	 * @param $data 发送短信所需要的参数	 * return array 是否发送成功 Array([Message] => OK,[RequestId] => B927FF72-CC36-49D7-8E89-949CED5E5CCA,[BizId] => 692915543829581451^0,[Code] => OK)	 */    public $weid;	public function alicloud($mobile,$data,$content){		$sms_var = $data['sms_var'];		$sms_reg_info = explode('{',$sms_var);		unset($sms_reg_info[0]);		$is = '';		foreach($sms_reg_info as $k=>$v){			$sms_reg_info = explode('}',$v);			$is .= $sms_reg_info[0].',';		}		$is = trim($is,',');		$is = explode(',',$is);		$param = [];		foreach($is as $k=>$v){			$param[$v] = $content[$k];		}		$param = json_encode($param);		$content = $this->sendSms($mobile,$data,$param);		return $content;	}	/**	 * 创瑞短信	 * @param $mobile int 电话号码	 * @param $data array 短信配置	 * @param $content 发送数据	 * return array {"code":"0","msg":"SUCCESS","smUuid":"18961_1_0_15883788928_2_OlRXYcN_1"}	 */	public function chui($mobile,$data,$content){		$sms_var = $data['sms_var'];		$sms_reg_info = explode('{',$sms_var);		unset($sms_reg_info[0]);		$is = '';		foreach($sms_reg_info as $k=>$v){			$sms_reg_info = explode('}',$v);			$is .= $sms_reg_info[0].',';		}		$is = trim($is,',');		$is = explode(',',$is);		$str = '';//发送的消息				if(!empty($is)){			foreach($is as $k=>$v){				$str .= $content.'##';			}		}		$str = trim($str,'##');		$post = [			'accesskey'=>$data['sms_key'],			'secret'=>$data['sms_serect'],			'sign'=>$data['sms_sign'],			'templateId'=>$data['sms_id'],			'mobile'=>$mobile,			'content'=>$str,		];		$url = 'http://api.1cloudsp.com/api/v2/single_send';		$content = $this->post_curls($post, $url);//		echo '<pre>';//		print_r($content);exit;		return json_decode($content,true);	}		//阿里云短信接口开始	public function sendSms($mobile,$data,$paramString) {		$params = array ();		$accessKeyId = $data['sms_key'];		$accessKeySecret = $data['sms_serect'];		$params["PhoneNumbers"] = $mobile;		$params["SignName"] = $data['sms_sign'];		$params["TemplateCode"] = $data['sms_id'];		$params['TemplateParam'] = $paramString;		$content = $this->request(			$accessKeyId,			$accessKeySecret,			"dysmsapi.aliyuncs.com",			array_merge($params, array(				"RegionId" => "cn-hangzhou",				"Action" => "SendSms",				"Version" => "2017-05-25",			))		);		return $content;	}	/**	 * 签名并发送短信	 * 	 */	public function request($accessKeyId, $accessKeySecret, $domain, $params, $security=false) {        $apiParams = array_merge(array (            "SignatureMethod" => "HMAC-SHA1",            "SignatureNonce" => uniqid(mt_rand(0,0xffff), true),            "SignatureVersion" => "1.0",            "AccessKeyId" => $accessKeyId,            "Timestamp" => gmdate("Y-m-d\TH:i:s\Z"),            "Format" => "JSON",        ), $params);        ksort($apiParams);        $sortedQueryStringTmp = "";        foreach ($apiParams as $key => $value) {            $sortedQueryStringTmp .= "&" . $this->encode($key) . "=" . $this->encode($value);        }        $stringToSign = "GET&%2F&" . $this->encode(substr($sortedQueryStringTmp, 1));        $sign = base64_encode(hash_hmac("sha1", $stringToSign, $accessKeySecret . "&",true));        $signature = $this->encode($sign);        $url = ($security ? 'https' : 'http')."://{$domain}/?Signature={$signature}{$sortedQueryStringTmp}";//        var_dump($url);exit;        try {            $content = $this->fetchContent($url);            return json_decode($content,true);        } catch( \Exception $e) {            return false;        }    }    private function encode($str)    {        $res = urlencode($str);        $res = preg_replace("/\+/", "%20", $res);        $res = preg_replace("/\*/", "%2A", $res);        $res = preg_replace("/%7E/", "~", $res);        return $res;    }	/**	 * 请求	 * $url 请求地址	 * return 返回值	 */    private function fetchContent($url) {        $ch = curl_init();        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_TIMEOUT, 5);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        curl_setopt($ch, CURLOPT_HTTPHEADER, array(            "x-sdk-client" => "php/2.0.0"        ));        if(substr($url, 0,5) == 'https') {            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);        }        $rtn = curl_exec($ch);        if($rtn === false) {            trigger_error("[CURL_" . curl_errno($ch) . "]: " . curl_error($ch), E_USER_ERROR);        }        curl_close($ch);        return $rtn;    }	//阿里云短信结束		//创瑞短信开始	public function post_curls($post, $url) {		$ch = curl_init($url);		curl_setopt($ch, CURLOPT_URL, $url);		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);		// post数据		curl_setopt($ch, CURLOPT_POST, 1);		// post的变量		curl_setopt($ch, CURLOPT_POSTFIELDS, $post);		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);		$output = curl_exec($ch);//		$arr = curl_error($ch);//		if(!empty($arr)){//			echo '321<br/>';//			var_dump($arr);exit;//		}		curl_close($ch);	//	$as = json_decode($output, true);		return $output;	}	//创瑞短信结束		/**	 * 获取模板库某个模板标题下关键词库	 * @param $access_token access_token	 * @param $id 添加模板id值   列：AT0229	 * @Param $array 添加字段   列：[2,1,4,9,17,18]	 * @param $key 变量key	 * return array	 */	public function template($access_token,$id='',$array=[],$weid,$key,$name){		$info = pdo_get('gpb_config',array('key'=>$key));		if(!empty($info)){			return array('status'=>0,'msg'=>'该key已存在','data'=>[]);		}		$url = "https://api.weixin.qq.com/cgi-bin/wxopen/template/add?access_token=".$access_token;		if($array){			$str = '';			foreach($array as $k=>$v){				$str .= $v.",";			}			$str = trim($str,',');		}		$data = "{".'"id":"'.$id.'",'.'"keyword_id_list":['.$str.']'."}";				$tamplate = $this->post_curls($data, $url);		$template_id = '';		$tamplates = json_decode($tamplate,true);		if($tamplates['errcode'] == 0 && $tamplates['errmsg'] == 'ok'){			//添加成功			$template_id = $tamplates['template_id'];		} else {			return array('status'=>1,'msg'=>'添加模板失败','data'=>$tamplates,'arr'=>$tamplate);		}		//获取全部的模板信息		$url = 'https://api.weixin.qq.com/cgi-bin/wxopen/template/list?access_token='.$access_token;		$info = $this->post_curls(json_encode(['offset'=>0,'count'=>20]), $url);		$info = json_decode($info,true);		$data = [];		$data = $this->teplate_info($info,$data,$template_id);		if(empty($data) && count($info['list']) == 20){			$info = $this->post_curls(json_encode(['offset'=>20,'count'=>20]), $url);			$data = $this->teplate_info($info,[],$template_id);		}		if(!empty($data)){			pdo_insert('gpb_config',array('name'=>$name,'value'=>serialize($data),'key'=>$key,'status'=>0,'time'=>time(),'weid'=>$weid,'type'=>2));			$uid = pdo_insertid();					}				return $data;	}	/**	 * 数据解析	 * @param $info array 微信返回模板消息数据	 * @param $data array 返回数组	 * @param $template_id string 模板id	 * return array	 */	public function teplate_info($info,$data = [],$template_id){        if(!is_array($info)){            $info = json_decode($info,true);        }		if($info['errcode'] == 0 && $info['errmsg'] == 'ok'){			//获取成功//            var_dump($info);//            var_dump($info['errcode']);var_dump($info['errmsg']);exit;			if(count($info['list']) > 0){				foreach($info['list'] as $k=>$v){					if($v['template_id'] == $template_id){						$data['id'] = $template_id;						$content = $v['content'];						$i = explode('{{',$content);						unset($i[0]);						foreach($i as $kk=>$vv){							$s =explode('.DATA', $vv);							$data['content'][$kk] = $s[0];						}					}				}			}		}else{			$data = [];		}		return $data;		}	/**	 * 发送模板消息	 * @param $key string 模板消息的key （对应数据库的key）	 * @param $data array 发送数据 格式  [0=>'参数','1'=>'参数']	 * @param $access_token string  access_token	 * @param $openid string 接收者（用户）的 openid	 * @param $page string 跳转页面，不填不跳转(支持带参数)	 * @param $form_id string 表单提交场景下，为 submit 事件带上的 formId；支付场景下，为本次支付的 prepay_id     * @param $item string 模板主键id	 */	public function send_out($key,$data,$access_token,$openid,$page,$form_id,$weid,$item){		/*if(time() > 1578585600){//			重2020年1月10号开始使用订阅消息			require_once '../addons/group_buy/api/subscribe/api.php';			$sub = new subscribe();			$sub->weid = $weid;			$sub->access_token = $access_token;			$key = $this->template_type($item);			$arr = $sub->send($openid,$data,$page,$key['subscribe']);			return $arr;		}*/		$config = pdo_get('gpb_config',array('key'=>$key));		if(empty($access_token)){			return array('status'=>0,'msg'=>'请传入access_token');		}		if(empty($config)){		    $items = $this->template_type($item);//            $info = $this->template($access_token,'AT0324',[3,24,1,2,8,19,29],$weid,$key);            $info = $this->template($access_token,$items['id'],$items['content'],$weid,$key,$items['name']);//            echo '<pre>';//            print_r($config);//            print_r($info);//            exit;			$config = pdo_get('gpb_config',array('key'=>$key));			if(empty($config)){				return array('status'=>0,'msg'=>'该模板消息不存在!','data'=>$info);			}		}		$url = 'https://api.weixin.qq.com/cgi-bin/message/wxopen/template/send?access_token='.$access_token;		$keys = [];		$config = unserialize($config['value']);		if(!empty($config['content'])){			foreach($config['content'] as $k=>$v){			    if($this->check_base64_out_json($data[$k])){                    $data[$k] = base64_decode($data[$k]);                }				$keys[$v] = ['value'=>$data[$k]];			}		}		$array = array(			'touser'=>$openid,			'template_id'=>$config['id'],			"page"=>$page,			'form_id'=>$form_id,			'data'=>$keys,		);//		pdo_insert('gpb_config',array('value'=>serialize($array)));		//发送模板消息		$info = $this->post_curls(json_encode($array),$url);//        echo '<pre>';//        print_r($config);//            print_r($info);//        exit;		$info = json_decode($info,true);		return $info;	}		/**	 * 模板类型	 * @param $item 模板变量	 * return array	 */	public function template_type($item){		$array = array(			'AT0229'=>[2,1,4,9,18],//订单支付成功  通知			'AT0330'=>[12,13,26,14,11,7,31],//申请团长通知			'AT0324'=>[3,24,1,2,8,19,29],//提现			'AT0787'=>[8,15,17,29,18],//退款			'AT0423'=>[3,2,10,19,20,5,11],//订单核销			'AT1122'=>[12,2,3,21,4,27,11],//发货通知			'AT0016'=>[2,4,3,7],//充值成功通知			'AT2266'=>[16,3,7,11,13],//会员卡开卡成功通知			'AT1179'=>[1,2,3,7,4],//砍价进度通知			'AT0051'=>[13,6,2,12,3],//拼团成功通知			'AT0310'=>[6,8,5,14],//拼团失败通知		);		$data = [];		switch($item){			case 'AT0229':				//订单支付成功  通知				$data = array('id'=>'AT0229','content'=>[2,1,4,9,18],'name'=>'订单支付成功','subscribe'=>'wechat_order_payment');				//依次为:订单编号,订单金额,订单状态,下单时间,备注			break;			case 'AT0330':				//申请团长通知				$data = array('id'=>'AT0330','content'=>[12,13,26,14,11,7,31],'name'=>'申请团长成功通知','subscribe'=>'wechat_application_for_the_regimental_commander');				//依次为:姓名,手机,微信号,结果,备注,申请时间,店铺名称			break;			case 'AT0324':				//提现				$data = array('id'=>'AT0324','content'=>[3,24,1,2,8,19,29],'name'=>'提现通知','subscribe'=>'wechat_cash_withdrawal');				//依次为:姓名,订单号,提现金额,提现时间,提现费率,提现状态,提现方式			break;			case 'AT0787':				//退款				$data = array('id'=>'AT0787','content'=>[8,15,17,29,18],'name'=>'退款通知','subscribe'=>'wechat_refund');				//依次为:订单号,退款时间,退款金额,商品详情,备注			break;			case 'AT0423':				//核销				$data = array('id'=>'AT0423','content'=>[3,2,10,19,20,5,11],'name'=>'核销通知','subscribe'=>'wechat_order_cancellation');				//依次为:核销时间,商品名称,订单金额,客户姓名,手机号,订单号,备注			break;			case 'AT1122':				//发货通知				$data = array('id'=>'AT1122','content'=>[12,2,3,21,4,27,11],'name'=>'发货通知','subscribe'=>'wechat_delivery_notice');				//依次为:订单编号,货物,数量,订单金额,备注,收货人,收件人电话			break;			case 'AT0016':				//充值成功通知				$data = array('id'=>'AT0016','content'=>[2,4,3,7],'name'=>'充值成功通知','subscribe'=>'wechat_recharge');				//依次为:账号，充值金额，充值时间，交易单号			break;			case 'AT2266':				//会员卡开卡成功通知				$data = array('id'=>'AT2266','content'=>[16,3,7,11,13],'name'=>'会员卡开卡成功通知','subscribe'=>'wechat_membership_card');				//依次为:账号，充值金额，充值时间，交易单号			break;			case 'AT0241':				//团长收货通知				$data = array('id'=>'AT0241','content'=>[2,7,5,14,15,25,8],'name'=>'团长收货通知','subscribe'=>'');				//依次为:订单编号，商品名称，买家昵称，收货人，收货人电话，收货地址，确认收货时间			break;			case 'AT1179':				$data = array('id'=>'AT1179','content'=>[1,2,3,7,4],'name'=>'砍价进度通知','subscribe'=>'wechat_bargain');				//依次是:商品名称,砍价进度,剩余时间,砍价金额,温馨提示			break;            case 'AT0051':                //拼团成功                $data = array('id'=>'AT0051','content'=>[13,6,2,12,3],'name'=>'拼团成功通知','subscribe'=>'wechat_team_success');				//依次:订单号,商品名称，团长，拼团价，成团人数            break;            case 'AT0310':                //拼团成功                $data = array('id'=>'AT0310','content'=>[6,8,5,14],'name'=>'拼团失败通知','subscribe'=>'wechat_team_error');//				依次:订单号，拼团商品，失败原因，退款金额            break;		}		return $data;	}	/**	 * 根据id获取配置	 */	public function config($key){		if(empty($key)){			return '';		}		$data = pdo_get('gpb_config',array('key'=>$key,"weid"=>$this->weid));		return $data;	}	/**	 * 给管理员发送短信	 * @param $id int 发送那个模板消息	 * @param $content array 发送数据 数组形式	 */	public function sms_info($id,$content){		//是否个管理员发送消息		$config  =$this->config('sms_code');		if($config['value'] != 1){			return '';			}		//获取管理员的手机号		$info = $this->config('sms_admin');		$value = unserialize($info['value']);		if(!empty($value)){			$key = $this->config('sms_data');			$key = unserialize($key['value']);			if(empty($key)){				return '';			}		}else{			return '';		}		//判断发送那个        $type  = $this->config('sms_type');		if($type['value'] != 1){			//创瑞			$item = $this->config($id);			foreach(unserialize($info['value']) as $k=>$v){				$this->chui($v,array('sms_var'=>$item['content']['value'],'sms_key'=>$key['key']['value'],'sms_serect'=>$key['serect']['value'],'sms_sign'=>$key['sign']['value'],'sms_id'=>$item['id']['value']),$content);			}		}else{			//阿里云			$item = $this->config($id);			$item = unserialize($item['value']);			foreach(unserialize($info['value']) as $k=>$v){				$a = $this->alicloud($v,array('sms_var'=>$item['content']['value'],'sms_key'=>$key['key']['value'],'sms_serect'=>$key['serect']['value'],'sms_sign'=>$key['sign']['value'],'sms_id'=>$item['id']['value']),$content);			}		}		return '';	}	/**	 * 发送公众号模板消息	 * @param $key 发送那个模板消息	 * @param $weid 模块id	 * @param $openid string 需要发送用户的openid	 * @param $href string 微信小程序跳转地址	 * @param $data 发送数据  例如 :$data = array('first'=>array('value'=>'头部信息','color'=>'#ff3b30'),'keyword1'=>array('value'=>'keyword1信息','color'=>'#000000'),'keyword2'=>array('value'=>'keyword2信息','color'=>'#000000'),'remark'=>array('value'=>'脚步信息','color'=>'#000000'));	 */	public function public_address_template($key,$weid,$openid,$data=[],$href){		global $_W;		if(empty($weid) || empty($key) || empty($openid)){			return ['code'=>1,'msg'=>'请传入正确的参数'];		}		$config = pdo_getall('gpb_config',array('weid'=>$weid,'status'=>1,'type'=>18));		$info = [];			if($config){			foreach($config as $k=>$v){				$info[$v['key']] = $v['value'];			}		}		$config = $info;		if(empty($config)){			return ['code'=>1,'msg'=>'请在后台配置参数'];		}		//解析配置信息		if($config['wechat_id'] != 1){			return ['code'=>1,'msg'=>'后台尚未打开模板消息配置'];		}		if(empty($config['wechat_appid'])){			return ['code'=>1,'msg'=>'请配置appid和appsecert'];		}		//解析文本		$kes = $key.'_content';		$datas = $this->wechat_analysis($config[$kes],$data);		if(!$datas){			return ['code'=>1,'msg'=>'文本解析错误'];		}		if(empty($config[$key])){			return ['code'=>1,'msg'=>'该模板消息不存在'];		}		/**发送消息*/		$token = $this->wechat_access_token($_W['account']['key'],$_W['account']['secret']);		$url = 'https://api.weixin.qq.com/cgi-bin/message/wxopen/template/uniform_send?access_token='.$_W['account']['access_toknes'];		$data = [];		$data['touser'] = $openid;		$data['mp_template_msg'] = [			'appid'=>$config['wechat_appid'],//公众号appid			'template_id'=>$config[$key],			'url'=>'http://www.baidu.com',			"miniprogram"=>[	            "appid"=>$_W['account']['key'],	            "pagepath"=>$href	        ],	        'data'=>$datas,		];		$msg = $this->post_curls(json_encode($data),$url);		return ['code'=>0,'msg'=>'发送成功','data'=>$msg];	}	//	/**//	 * 发送公众号消息//	 *///	public function uniformMessage_send($access_token){//		$appid = 'wxd8bb3f7de92c60c0';//		$appsecert = '2c5e487beae88153f326e3b7a94c4040';//		$url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=".$appid."&secret=".$appsecert;//      $list = $this->http_request($url);//      $list = json_decode($list, true);//		//		$url = 'https://api.weixin.qq.com/cgi-bin/message/wxopen/template/uniform_send?access_token='.$list['access_token'];//		$data = [];//		$data['touser'] = 'oZ55s5QLUsWdAZRawUHRtj3Ry-_4';//		$data['mp_template_msg'] = [//			'appid'=>'wx0400a248998e45ec',//			'template_id'=>'mP1hT82juNmJz9Lx5PnqaEdaWs6H2VdIJ91JboQbjnQ',//			'url'=>'https://www.baidu.com',//			"miniprogram"=>[//	            "appid"=>"wxd8bb3f7de92c60c0",//	            "page"=>"/pages/index/index"//	        ],//	        'data'=>[//	        	'first'=>['value'=>'first','color'=>'#000000'],//	        	'keyword1'=>['value'=>'keyword1','color'=>'#000000'],//	        	'keyword2'=>['value'=>'keyword2','color'=>'#000000'],//	        	'keyword3'=>['value'=>'keyword3','color'=>'#000000'],//	        	'keyword4'=>['value'=>'keyword4','color'=>'#000000'],//	        	'remark'=>['value'=>'remark','color'=>'#000000'],//	        ],//		];//		echo '<pre>';//		print_r($data);//		$res = $this->http_request($url,json_encode($data,JSON_UNESCAPED_UNICODE));//		print_r($res);//		exit;//	}	/**	 * 解析文本	 * @param $str string 文本	 * @param $data array 需要传递的参数	 */	private function wechat_analysis($str,$data){		if(empty($str)){			return false;		}		$str = explode(".DATA}}",$str);		unset($str[count($str)-1]);		if($str){			$in = [];			foreach($str as $k=>$v){				$in[] = explode("{{", $v);			}			$str = [];			foreach($in as $k=>$v){				$str[$k] = $v[1];			}		}else{			return false;		}		$datas = [];		foreach($str as $k=>$v){		    if($this->check_base64_out_json($data[$v]['value'])){                $data[$v]['value'] = base64_decode($data[$v]['value']);            }			$datas[$v] = ['value'=>$data[$v]['value'],'color'=>empty($data[$v]['color']) ? '#000000' : $data[$v]['color'] ];		}		return $datas;	}	/**	 * 公众号  获取access_token	 * @param $appid string APPID	 * @param $appsecert string APPSECERT	 */	private function wechat_access_token($appid='',$appsecert=''){		global $_W;		if(empty($appid) || empty($appsecert)){			return '';		}		if(time() > $_W['account']['access_times'] || empty($_W['account']['access_times'])){			//获取access_token			$url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=".$appid."&secret=".$appsecert;			$list = $this->http_request($url);			$list = json_decode($list, true);			$_W['account']['access_toknes'] = $list['access_token'];			$_W['account']['access_times'] = time()+7190;			return $_W['account']['access_toknes'];		}else{			return $_W['account']['access_toknes'];		}	}	/**     * 调用接口， $data是数组参数     * @return 签名     */    private function http_request($url,$data = null,$headers=array())    {        $curl = curl_init();        if( count($headers) >= 1 ){            curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);        }        curl_setopt($curl, CURLOPT_URL, $url);            curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);            if (!empty($data)){            curl_setopt($curl, CURLOPT_POST, 1);            curl_setopt($curl, CURLOPT_POSTFIELDS, $data);        }        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);        $output = curl_exec($curl);        curl_close($curl);        return $output;    }	/**	 * 公众号  获取openid信息	 */	public function wechat_openid($appid,$secert){		$wxuser = $this->GetOpenid($appid,$secert);//授权获取openid以及微信用户信息		return $wxuser;	}	// 网页授权登录获取 OpendId    public function GetOpenid($appid,$secert)    {        //通过code获得openid        if (!isset($_GET['code'])){            //触发微信返回code码            $baseUrl = urlencode($this->get_url());            $url = $this->__CreateOauthUrlForCode($baseUrl,$appid,$secert); // 获取 code地址            Header("Location: $url"); // 跳转到微信授权页面 需要用户确认登录的页面            exit();        } else {            //上面获取到code后这里跳转回来            $code = $_GET['code'];            $data = $this->getOpenidFromMp($code,$appid,$secert);//获取网页授权access_token和用户openid//          session('access_token',$data['access_token']);//          session('access_token_time',time()+7200);            $data2 = $this->GetUserInfo($data['access_token'],$data['openid']);//获取微信用户信息//          var_dump($data2);exit('1');            return $data2;        }    }	/**     * 获取当前的url 地址     * @return type     */    private function get_url() {        $sys_protocal = isset($_SERVER['SERVER_PORT']) && $_SERVER['SERVER_PORT'] == '443' ? 'https://' : 'http://';        $php_self = $_SERVER['PHP_SELF'] ? $_SERVER['PHP_SELF'] : $_SERVER['SCRIPT_NAME'];        $path_info = isset($_SERVER['PATH_INFO']) ? $_SERVER['PATH_INFO'] : '';        $relate_url = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : $php_self.(isset($_SERVER['QUERY_STRING']) ? '?'.$_SERVER['QUERY_STRING'] : $path_info);        return $sys_protocal.(isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : '').$relate_url;    }	/**     *     * 通过code从工作平台获取openid机器access_token     * @param string $code 微信跳转回来带上的code     *     * @return openid     */    public function GetOpenidFromMp($code,$appid,$secert)    {        //通过code获取网页授权access_token 和 openid 。网页授权access_token是一次性的，而基础支持的access_token的是有时间限制的：7200s。    	//1、微信网页授权是通过OAuth2.0机制实现的，在用户授权给公众号后，公众号可以获取到一个网页授权特有的接口调用凭证（网页授权access_token），通过网页授权access_token可以进行授权后接口调用，如获取用户基本信息；    	//2、其他微信接口，需要通过基础支持中的“获取access_token”接口来获取到的普通access_token调用。        $url = $this->__CreateOauthUrlForOpenid($code,$appid,$secert);               $ch = curl_init();//初始化curl                curl_setopt($ch, CURLOPT_TIMEOUT, 300);//设置超时        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,FALSE);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,FALSE);        curl_setopt($ch, CURLOPT_HEADER, FALSE);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);                 $res = curl_exec($ch);//运行curl，结果以jason形式返回                    $data = json_decode($res,true);                 curl_close($ch);        return $data;    }	/**     *     * 通过access_token openid 从工作平台获取UserInfo           * @return openid     */    public function GetUserInfo($access_token,$openid)    {                 // 获取用户 信息        $url = $this->__CreateOauthUrlForUserinfo($access_token,$openid);        $ch = curl_init();//初始化curl                curl_setopt($ch, CURLOPT_TIMEOUT, 300);//设置超时        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,FALSE);        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,FALSE);        curl_setopt($ch, CURLOPT_HEADER, FALSE);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);                 $res = curl_exec($ch);//运行curl，结果以jason形式返回                    $data = json_decode($res,true);                    curl_close($ch);        return $data;    }	/**     *     * 构造获取code的url连接     * @param string $redirectUrl 微信服务器回跳的url，需要url编码     *     * @return 返回构造好的url     */    private function __CreateOauthUrlForCode($redirectUrl,$appid,$secert)    {        $urlObj["appid"] = $appid;        $urlObj["redirect_uri"] = "$redirectUrl";        $urlObj["response_type"] = "code";//        $urlObj["scope"] = "snsapi_base";        $urlObj["scope"] = "snsapi_userinfo";        $urlObj["state"] = "STATE"."#wechat_redirect";        $bizString = $this->ToUrlParams($urlObj);        return "https://open.weixin.qq.com/connect/oauth2/authorize?".$bizString;    }	/**     *     * 构造获取open和access_toke的url地址     * @param string $code，微信跳转带回的code     *     * @return 请求的url     */    private function __CreateOauthUrlForOpenid($code,$appid,$secert)    {        $urlObj["appid"] = $appid;        $urlObj["secret"] = $secert;        $urlObj["code"] = $code;        $urlObj["grant_type"] = "authorization_code";        $bizString = $this->ToUrlParams($urlObj);        return "https://api.weixin.qq.com/sns/oauth2/access_token?".$bizString;    }	/**     *     * 构造获取拉取用户信息(需scope为 snsapi_userinfo)的url地址          * @return 请求的url     */    private function __CreateOauthUrlForUserinfo($access_token,$openid)    {        $urlObj["access_token"] = $access_token;        $urlObj["openid"] = $openid;        $urlObj["lang"] = 'zh_CN';                $bizString = $this->ToUrlParams($urlObj);        return "https://api.weixin.qq.com/sns/userinfo?".$bizString;                        }	/**     *     * 拼接签名字符串     * @param array $urlObj     *     * @return 返回已经拼接好的字符串     */    private function ToUrlParams($urlObj){        $buff = "";        foreach ($urlObj as $k => $v)        {            if($k != "sign"){                $buff .= $k . "=" . $v . "&";            }        }        $buff = trim($buff, "&");        return $buff;    }    /*     * 优化微擎底层的is_base64的判断     * 确保字符串被base64解密后可被json加密     * string $str 被检测的字符串     */    protected function check_base64_out_json($str){        if(!is_string($str)){            return false;        }        $str_base64_decode = base64_decode($str);        $str_base64_decode_json_encode = json_encode($str_base64_decode);        $error_code = json_last_error();        if($error_code > 0 ){            return false;        }        return $str == base64_encode(base64_decode($str));    }	}?>